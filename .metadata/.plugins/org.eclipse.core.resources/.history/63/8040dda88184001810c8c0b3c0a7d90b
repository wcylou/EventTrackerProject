buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id 'org.hidetake.ssh' version '2.9.0'
}

apply plugin: 'org.hidetake.ssh'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
war {
  archiveName = "${baseName}.war"
  destinationDir = file("./")      // Project root
}

group = 'com.skilldistillery.spotify'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile project(':SpotifyJPA')
	runtime group: 'org.hidetake', name: 'groovy-ssh', version: '2.9.0'
}

remotes {
  ec2host {
    host = '11.22.33.44' // Change this to you EC2 host's public IP
    user = 'ec2-user'
    identity = file("${System.properties['user.home']}/.ssh/aws.pem")
  }
}

task deploy(dependsOn: war, group: 'build') {
  description = 'Deploy WAR file to remote server'
  ssh.settings {
    knownHosts = addHostKey(file("${System.properties['user.home']}/.ssh/known_hosts"))
  }  
  doLast {
    logger.lifecycle("Deploying $war.archivePath to $remotes.ec2host.host")
    ssh.run {
      session(remotes.ec2host) {
        put from: war.archivePath.absolutePath, into: '/var/lib/tomcat8/webapps'
        logger.lifecycle("WAR file deployed to $remotes.ec2host.host")
      }
    }
  }
}
